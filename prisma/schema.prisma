datasource db { 
  provider = "postgresql"
  url = env("DATABASE_URL")
  schemas = ["notifications"]
}

generator client { 
  provider = "prisma-client-js" 
}

model User {
  id         String   @id @default(uuid())
  tenantId   String
  externalId String
  devices    Device[]
  @@index([tenantId, externalId])
  @@schema("notifications")
}

model Device {
  id         String   @id @default(uuid())
  appId      String
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  platform   String
  provider   String
  pushToken  String
  lastSeenAt DateTime @default(now())
  isActive   Boolean  @default(true)
  subscriptions Subscription[]
  deliveries    Delivery[]
  @@schema("notifications")
}

model Topic {
  id       String  @id @default(uuid())
  appId    String
  key      String
  name     String
  subscriptions Subscription[]
  @@schema("notifications")
}

model Subscription {
  id       String  @id @default(uuid())
  topicId  String
  topic    Topic   @relation(fields: [topicId], references: [id])
  deviceId String
  device   Device  @relation(fields: [deviceId], references: [id])
  @@schema("notifications")
}

model Notification {
  id         String   @id @default(uuid())
  appId      String
  title      String
  body       String
  data       Json?
  scheduleAt DateTime?
  status     String   @default("pending")
  createdAt  DateTime @default(now())
  deliveries Delivery[]
  @@schema("notifications")
}

model Delivery {
  id               String   @id @default(uuid())
  notificationId   String
  notification     Notification @relation(fields: [notificationId], references: [id])
  deviceId         String
  device           Device   @relation(fields: [deviceId], references: [id])
  status           String
  attemptCount     Int      @default(0)
  lastError        String?
  providerMessageId String?
  completedAt      DateTime?
  @@schema("notifications")
}
